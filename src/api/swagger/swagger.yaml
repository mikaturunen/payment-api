swagger: "2.0"

info:
  version: "0.0.1"
  title: Ecommerce API
  description: Simple API for making, refunding and tracking payments and their statuses for different commercial business needs.
  contact:
    name: API support
    url: http://mikaturunen.eu
    email: mika.turunen@ymail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

# during dev, should point to your local machine
# host: localhost:3002
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https

consumes:
  - application/json
produces:
  - application/json


paths:
  /swagger:
    x-swagger-pipe: swagger_raw

  /v1/payment/open/single:
    x-swagger-router-controller: v1/payment
    post:
      description: Creates a single open payment. Response is a fully functional payment wall JSON. Iterate over the response and render the buttons and create valid HTML from it.
      operationId: openPayment
      parameters:
        - in: body
          name: OpenPayment
          required: true
          schema:
            $ref: "#/definitions/BodyOpenPayment"
      responses:
        "200":
          description: Success
      externalDocs:
        description: "Example of a payments.json that can be used in testing. Note that the HMAC needs to be calculated if any of the values in the body.payment changes. You can find guidance on how to calculate hmac from here: https://gist.github.com/mikaturunen/ffc1a29510b52f5e8bdb5cfd2f7d08c0"
        url: /examples/payment.json

  /v1/payment/open/shop-in-shop:
    x-swagger-router-controller: v1/payment-shop-in-shop
    post:
      description: Creates a single open shop-in-shop payment. Response is a fully functional payment wall JSON. Iterate over the response and render the buttons and create valid HTML from it.
      operationId: openPayment
      parameters:
        - in: body
          name: OpenPaymentShopInShop
          required: true
          schema:
            $ref: "#/definitions/BodyOpenPayment"
      responses:
        "200":
          description: Success

  /v1/payment/poll/single:
    x-swagger-router-controller: v1/poll
    post:
      description: Polls the payment status for given payment.
      operationId: pollPayment
      parameters:
        - in: body
          name: pollPayment
          required: true
          schema:
            $ref: "#/definitions/BodyPollPayment"
      responses:
        "200":
          description: Success

  /v1/payment/poll/shop-in-shop:
    x-swagger-router-controller: v1/poll
    post:
      description: Polls the payment status for given payment.
      operationId: pollPaymentShopInShop
      parameters:
        - in: body
          name: pollPaymentShopInShop
          required: true
          schema:
            $ref: "#/definitions/BodyPollPayment"
      responses:
        "200":
          description: Success

  /v1/payment/refund:
    x-swagger-router-controller: v1/refund
    post:
      description: Refunds a given item from a payment. Can also refund the whole payment.
      operationId: refundPayment
      parameters:
        - in: body
          name: RefundPayment
          required: true
          schema:
            $ref: "#/definitions/BodyRefundPayment"
      responses:
        "200":
          description: Success

# complex objects have schema definitions
definitions:
  BodyOpenPayment:
    type: object
    required:
      - hmac
      - merchantId
      - payment
    properties:
      merchantId:
        type: string
        example: "375917"
      hmac:
        type: string
        minLength: 10
        example: "7FAE9FD7ED7378FF3A110DB33CCBC2D8ADEF9459DBA3EEC2F002C41E918269E6"
      payment:
        type: object
        $ref: "#/definitions/OpenPayment"

  BodyRefundPayment:
    type: object
    required:
      - merchantId
      - stamp
      - payment
      - hmac
    properties:
      merchantId:
        type: string
        example: "375917"
      stamp:
        type: string
        example: "123123123"
      hmac:
        type: string
        minLength: 10
        example: "You need to calculate this!"
      payment:
        type: object
        required:
          - stamp
          - reference
          - amount
          - receiver
        properties:
          stamp:
            type: string
            example: "123123123"
          reference:
            type: string
            example: "123123123"
          amount:
            type: integer
            format: int32
            minimum: 100
            example: 100
          receiver:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                example: "test@testing.io"

  BodyPollPayment:
    type: object
    required:
      - merchantId
      - poll
      - hmac
    properties:
      merchantId:
        type: string
        example: 375917
      hmac:
        type: string
        minLength: 10
        example: "You need to calculate this!"
      poll:
        type: object
        required:
          - stamp
          - reference
          - amount
          - currency
        properties:
          stamp:
            type: string
            example: '123123123'
          reference:
            type: string
            example: '123123123'
          amount:
            type: integer
            format: int32
            minimum: 100
            example: 100
          currency:
            type: string
            example: 'EUR'

  OpenPayment:
    required:
      - totalAmount
      - currency
      - reference
      - stamp
      - items
      - content
      - country
      - language
      - message
      - delivery
      - customer
      - redirect
    properties:
      totalAmount:
        type: integer
        format: int32
        minimum: 100
        example: 100
      currency:
        type: string
        example: "EUR"
      reference:
        type: string
        example: '123123123'
      stamp:
        type: string
        example: '123123123'
      items:
        type: array
        items:
          minItems: 1
          $ref: "#/definitions/PaymentItem"
      delivery:
        $ref: "#/definitions/DeliveryAddress"
      content:
        type: number
        example: 1
      country:
        type: string
        example: "FIN"
      language:
        type: string
        example: "FI"
      message:
        type: string
        minLength: 0
        example: "Thank you for your purchase"
      customer:
        $ref: "#/definitions/MerchantCustomer"
      redirect:
        $ref: "#/definitions/RedirectControl"

  PaymentItem:
    required:
      - reference
      - stamp
      - amount
      - merchant
      - description
      - categoryCode
      - deliveryDate
      - vatPercentage
    properties:
      reference:
        type: string
        example: '123123123'
      stamp:
        type: string
        example: '123123123'
      amount:
        type: integer
        format: int32
        example: 100
      merchant:
        type: object
        $ref: "#/definitions/Merchant"
      description:
        type: string
        maxLength: 150
        minLength: 0
        example: "Basic couch"
      categoryCode:
        type: string
        maxLength: 20
        minLength: 1
        example: "1001"
      deliveryDate:
        type: string
        maxLength: 10
        minLength: 8
        example: "20170602"
      vatPercentage:
        type: integer
        format: int32
        maximum: 100
        minimum: 0
        example: 23

  RedirectControl:
    required:
      - return
      - delayed
      - cancel
      - reject
    properties:
      return:
        type: string
        example: http://shop.url.com/success
      delayed:
        type: string
        example: http://shop.url.com/delayed
      cancel:
        type: string
        example: http://shop.url.com/cancel
      reject:
        type: string
        example: http://shop.url.com/reject

  MerchantCustomer:
    required:
      - firstName
      - lastName
      - email
    properties:
      firstName:
        type: string
        minLength: 2
        maxLength: 100
        example: "Matti"
      lastName:
        type: string
        minLength: 2
        maxLength: 100
        example: "Meikäläinen"
      email:
        type: string
        example: "matti.meikalainen@testing.io"

  Merchant:
    required:
      - id
      - name
      - email
      - vatId
    properties:
      id:
        type: string
        example: 375917
      name:
        type: string
        maxLength: 45
        example: Max's couch
      email:
        type: string
        example: maxscouch@couch.io
      vatId:
        type: string
        maxLength: 30
        example: "2196606-6"

  DeliveryAddress:
    required:
      - postalCode
      - city
      - country
      - county
      - streetAddress
    properties:
      postalCode:
        type: string
        maxLength: 10
        minLength: 2
        example: "33200"
      city:
        type: string
        maxLength: 20
        example: "Tampere"
      country:
        type: string
        maxLength: 20
        minLength: 2
        example: "Finland"
      county:
        type: string
        maxLength: 40
        example: "Pirkanmaa"
      streetAddress:
        type: string
        maxLength: 100
        minLength: 5
        example: "Varastokatu 3"
